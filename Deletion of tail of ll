class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class Main {
    // Function to delete the tail node
    public static Node deleteTail(Node head) {
        if (head == null || head.next == null) {
            // If list is empty or has only one node
            return null;
        }

        Node current = head;
        // Traverse to the second last node
        while (current.next.next != null) {
            current = current.next;
        }

        // Remove last node
        current.next = null;
        return head;
    }

    // Print the linked list
    public static void printList(Node head) {
        while (head != null) {
            System.out.print(head.data + " ");
            head = head.next;
        }
        System.out.println();
    }

    // Main function
    public static void main(String[] args) {
        Node head = new Node(10);
        head.next = new Node(20);
        head.next.next = new Node(30);
        head.next.next.next = new Node(40);

        System.out.print("Original list: ");
        printList(head);

        head = deleteTail(head);

        System.out.print("After deleting tail: ");
        printList(head); // Output: 10 20 30
    }
}
